#!/bin/bash

set -C -f
IFS="$(printf '%b_' '\n')"
IFS="${IFS%_}"

# Load cache system
SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"
source "$SCRIPT_DIR/cache_system.sh"

# Called by lf to generate the preview.
#   $1 file path
#   $4 x offset in cell coordinates
#   $5 y offset in cell coordinates
#   $2 width of the display area in cell coordinates
#   $3 height of the display area in cell coordinates
THUMBNAIL_FPATH="$LF_KITTY_TEMPDIR/thumbnail.png"

# Get MIME type for caching decisions
MIME_TYPE="$(file --dereference --brief --mime-type -- "$1")"

# Try to get cached version first for supported formats
CACHED_FILE=""
case "$MIME_TYPE" in
  image/jpeg | image/jpg | image/webp | image/heic | image/gif | image/* | */pdf | image/vnd.djvu | video/* | font/* | application/vnd.ms-opentype)
    CACHED_FILE=$(get_cached_preview "$1" "$MIME_TYPE" 2>/dev/null || echo "")
    ;;
esac

# If we have a cached version, use it
if [[ -n "$CACHED_FILE" && -f "$CACHED_FILE" ]]; then
  $XDG_CONFIG_HOME/lf/kitty.sh show "$CACHED_FILE" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
  exit 127
fi

# Start preemptive caching ONLY when we encounter an uncached file
CURRENT_DIR="$(dirname "$(readlink -f "$1")")"
echo "DEBUG: Starting precache for directory: $CURRENT_DIR" >> /tmp/precache.log
echo "DEBUG: Found files: $(find "$CURRENT_DIR" -maxdepth 1 -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.webp" -o -iname "*.heic" -o -iname "*.gif" -o -iname "*.pdf" \) 2>/dev/null | wc -l)" >> /tmp/precache.log
precache_directory "$CURRENT_DIR" &
echo "DEBUG: Precache background job started with PID: $!" >> /tmp/precache.log

# case "$(basename -- "$1" | tr '[:upper:]' '[:lower:]')" in
case "$MIME_TYPE" in
text/html)
  lynx -width="$4" -display_charset=utf-8 -dump "$1"
  ;;
text/troff)
  w=`expr "$2" - 2`
  MANWIDTH="$w" man ./ "$1"
  ;;
text/* | */xml)
  [ "${1##*.}" = "md" ] && glow -w "$2" "$1" && exit 127
  bat --terminal-width "$(($4 - 2))" -f "$1"
  ;;
application/json | application/x-ndjson)
  jq -C < "$1" ;;
audio/* | application/octet-stream)
  mediainfo "$1" || exit 1
  ;;
image/vnd.djvu)
	djvused "$1" -e 'select 1; save-page-with /dev/stdout' | magick djvu:- "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
image/webp)
	dwebp "$1" -tiff -o "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
image/heic)
	magick convert "$1" "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
image/png)
	$XDG_CONFIG_HOME/lf/kitty.sh show "$1" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
image/gif)
	magick convert "${1}[0]" "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
image/*)
	magick convert "$1" "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
*/pdf)
	pdftocairo -singlefile -r 150 -png "$1" "${THUMBNAIL_FPATH%.*}"
	mv "${THUMBNAIL_FPATH%.*}-1.png" "$THUMBNAIL_FPATH" 2>/dev/null || mv "${THUMBNAIL_FPATH%.*}.png" "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
video/*)
	ffmpegthumbnailer -i "$1" -s 0 -c png -f -o "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
	;;
application/*zip)
	atool --list -- "$1"
	;;
*spreadsheetml.sheet)
	xlsx2csv -s 1 "$1" | bat --terminal-width "$(($4 - 2))" -l 'csv'
	;;
*opendocument*)
	odt2txt "$1"
	;;
application/pgp-encrypted)
	gpg -d -- "$1"
	;;
font/* | application/vnd.ms-opentype)
  FONT_NAME=$(fc-query --format "%{family}\n" "$1" | head -n 1)

  PREVIEW_TEXT="${FONT_NAME}\nABCDEFGHIJKLMNOPQRSTUBWXYZ\n""\
abcdefghijklmnopqrstuvwxyz\n""\
1234567890\n""\
!@#$\%(){}[]-+=_\`~"

  magick convert -size "1920x1080" xc:'#ffffff' \
    -gravity center -pointsize 76 \
    -font "$1" \
    -fill '#000000' \
    -annotate +0+0 "$PREVIEW_TEXT" \
    "$THUMBNAIL_FPATH"
	$XDG_CONFIG_HOME/lf/kitty.sh show "$THUMBNAIL_FPATH" $LF_KITTY_IMAGE_ID 1 $4 $5 $2 $3
  ;;
*)
	cat "$1"
	;;
esac
exit 127
